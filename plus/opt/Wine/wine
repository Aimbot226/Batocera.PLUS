#!/bin/bash

### WINE - Batocera.PLUS
### Alexandre Freire dos Santos
### Email: alexxandre.freire@gmail.com

################################################################################

WINE_DIR='/opt/Wine'
WINE_VERSION='1580332120'

################################################################################

### ARQUITETURA DO WINE (x32, x64)

if ! [ "${WINEARCH}" ]; then
    WINE_ARCH="$(basename "$0")"
else
    WINE_ARCH="${WINEARCH}"
fi

case ${WINE_ARCH} in
    wine|wineserver)
        if [ "${WINE_ARCH}" == 'wine' ]; then
            WINE_ARCH=''
        fi
        LD_LIBRARY_PATH="${WINE_DIR}/lib32:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        LD_LIBRARY_PATH="/lib32:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        LD_LIBRARY_PATH="${WINE_DIR}/lib64:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        export LIBGL_DRIVERS_PATH="/lib32/dri:${LIBGL_DRIVERS_PATH:+:$LIBGL_DRIVERS_PATH}"
        ;;
    wine64)
        WINE_ARCH='64'
        LD_LIBRARY_PATH="${WINE_DIR}/lib64:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        export WINEARCH='win64'
        ;;
    win32)
        WINE_ARCH=''
        LD_LIBRARY_PATH="${WINE_DIR}/lib32:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        LD_LIBRARY_PATH="/lib32:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        export LIBGL_DRIVERS_PATH="/lib32/dri:${LIBGL_DRIVERS_PATH:+:$LIBGL_DRIVERS_PATH}"
        ;;
    win64)
        WINE_ARCH='64'
        LD_LIBRARY_PATH="${WINE_DIR}/lib64:${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        ;;
    *)
        exit -1
esac

export LD_LIBRARY_PATH
export PYTHONPATH="/usr/lib/python2.7:${PYTHONPATH:+:$PYTHONPATH}"
export PERLLIB="/usr/share/perl5/:${PERLLIB:+:$PERLLIB}"

################################################################################

### CAMINHOS

if ! [ "${WINEPREFIX}" ]; then
    export WINEPREFIX="${HOME}/configs/wine"
elif ! [ -d "${WINEPREFIX}" ]; then
    echo "Error ${WINEPREFIX} not found."
    exit 1
fi

################################################################################

### INICIA O WINESERVER

if [ "${WINE_ARCH}" == 'wineserver' ]; then
    exec "${WINE_DIR}/bin/wineserver" "$@"
fi

################################################################################

### INICIA O WINE NORMALMENTE

if [ -f "${WINEPREFIX}/.update-timestamp" ]; then
    WINE_VERSION_NEW="$(cat -e "${WINEPREFIX}/.update-timestamp" | cut -d '^' -f 1)"
    if [ "${WINE_VERSION}" == "${WINE_VERSION_NEW}" ]; then
        exec "${WINE_DIR}/bin/wine${WINE_ARCH}" "$@"
    else
        echo 'CREATING NEW WINEPREFIX'
    fi
fi

################################################################################
################################################################################

### TELA DE CARREGAMENTO

retroarch -L '/usr/lib/libretro/imageviewer_libretro.so' \
          --config '/usr/share/batocera/datainit/system/configs/retroarch/retroarchcustom.cfg' \
          "${WINE_DIR}/wine.png" &

################################################################################

### CRIA UM NOVO WINEPREFIX

rm -r "${WINEPREFIX}/"* 2> /dev/null

################################################################################

### DIRECTX 9 + WINE-MONO (install)

# Se o usuário definir o WINEPREFIX o DirectX e o mono não será instalado, útil para
# instalações em prefixos diferentes para evitar influências externas.

if [ "${WINEPREFIX}" == "${HOME}/configs/wine" ]; then
    ${WINE_DIR}/bin/wine${WINE_ARCH} ${WINE_DIR}/apps/directx_Jun2010_redist/DXSETUP.exe /silent

    mkdir "${WINEPREFIX}/drive_c/windows/mono"
    ln -s "${WINE_DIR}/apps/mono" "${WINEPREFIX}/drive_c/windows/mono/mono-2.0"
fi

################################################################################

### REINICIA O "WINDOWS"

function wineWait() {
    for i in {1..40}; do
        if [ $(pidof -s wineserver) ]; then
            sleep 1
            continue
        fi

        if [ -f "${WINEPREFIX}/user.reg" ] && [ -f "${WINEPREFIX}/system.reg" ]; then
            sleep 2
            break
        fi
    done
}

wineWait

"${WINE_DIR}/bin/wine${WINE_ARCH}" wineboot

wineWait

################################################################################

### PASTAS DO USUÁRIO


for i in "${WINEPREFIX}/drive_c/users/root/"* "${WINEPREFIX}/drive_c/users/0/"* ; do
    if [ -L "$i" ]; then
        rm -r "$i"
    fi
done

mkdir -p "${WINEPREFIX}/drive_c/users/0/Desktop"         \
         "${WINEPREFIX}/drive_c/users/0/My Documents"    \
         "${WINEPREFIX}/drive_c/users/0/My Music"        \
         "${WINEPREFIX}/drive_c/users/0/My Pictures"     \
         "${WINEPREFIX}/drive_c/users/0/My Videos"       \
         "${WINEPREFIX}/drive_c/users/0/Personal"        \
         "${WINEPREFIX}/drive_c/users/root/Desktop"      \
         "${WINEPREFIX}/drive_c/users/root/My Documents" \
         "${WINEPREFIX}/drive_c/users/root/My Music"     \
         "${WINEPREFIX}/drive_c/users/root/My Pictures"  \
         "${WINEPREFIX}/drive_c/users/root/My Videos"    \
         "${WINEPREFIX}/drive_c/users/root/Personal"

# Configura diretórios padrões para as principais pastas do usuário no registro do windows.
sed -i s'/\"Desktop\"=\"C:\\\\users\\\\0\\\\.*/\"Desktop\"=\"C:\\\\users\\\\0\\\\Desktop\"/'                     "${WINEPREFIX}/user.reg"
sed -i s'/\"Personal\"=\"C:\\\\users\\\\0\\\\.*/\"Personal\"=\"C:\\\\users\\\\0\\\\Personal\"/'                  "${WINEPREFIX}/user.reg"
sed -i s'/\"My Music\"=\"C:\\\\users\\\\0\\\\.*/\"My Music\"=\"C:\\\\users\\\\0\\\\My Music\"/'                  "${WINEPREFIX}/user.reg"
sed -i s'/\"My Pictures\"=\"C:\\\\users\\\\0\\\\.*/\"My Pictures\"=\"C:\\\\users\\\\0\\\\My Pictures\"/'         "${WINEPREFIX}/user.reg"
sed -i s'/\"My Videos\"=\"C:\\\\users\\\\0\\\\.*/\"My Videos\"=\"C:\\\\users\\\\0\\\\My Videos\"/'               "${WINEPREFIX}/user.reg"

sed -i s'/\"Desktop\"=str(2):\"%USERPROFILE%\\\\.*/\"Desktop\"=str(2):\"%USERPROFILE%\\\\Desktop\"/'             "${WINEPREFIX}/user.reg"
sed -i s'/\"Personal\"=str(2):\"%USERPROFILE%\\\\.*/\"Personal\"=str(2):\"%USERPROFILE%\\\\Personal\"/'          "${WINEPREFIX}/user.reg"
sed -i s'/\"My Music\"=str(2):\"%USERPROFILE%\\\\.*/\"My Music\"=str(2):\"%USERPROFILE%\\\\My Music\"/'          "${WINEPREFIX}/user.reg"
sed -i s'/\"My Pictures\"=str(2):\"%USERPROFILE%\\\\.*/\"My Pictures\"=str(2):\"%USERPROFILE%\\\\My Pictures\"/' "${WINEPREFIX}/user.reg"
sed -i s'/\"My Videos\"=str(2):\"%USERPROFILE%\\\\.*/\"My Videos\"=str(2):\"%USERPROFILE%\\\\My Videos\"/'       "${WINEPREFIX}/user.reg"

################################################################################

### DRIVES ADICIONAIS (D: E: Z: etc...)

ln -s "/userdata/roms/windows" "${WINEPREFIX}/dosdevices/d:"

################################################################################

### REGISTRA UM USUÁRIO NO WINDOWS.

sed -i s'/"RegisteredOrganization"=""/"RegisteredOrganization"="Batocera.PLUS"/' "${WINEPREFIX}/system.reg"
sed -i s'/"RegisteredOwner"=""/"RegisteredOwner"="Alexandre Freire dos Santos"/' "${WINEPREFIX}/system.reg"

################################################################################

### USA O GERENCIADOR DE JANELAS INTERNO DO WINE (O DO SISTEMA DÁ BUG)

#echo ''                             >> "${WINEPREFIX}/user.reg"
#echo '[Software\\Wine\\X11 Driver]' >> "${WINEPREFIX}/user.reg"
#echo '"Managed"="N"'                >> "${WINEPREFIX}/user.reg"

################################################################################

### IMPEDE QUE O WINECFG CRIE ARQUIVOS DESNECESSÁRIOS.

echo '[Software\\Wine\\FileOpenAssociations]' >> "${WINEPREFIX}/user.reg"
echo '"Enable"="N"'                           >> "${WINEPREFIX}/user.reg"

################################################################################

### INTERROMPE A TELA DE CARREGAMENTO

while [ "$(pidof retroarch)" ]; do
    killall retroarch
    sleep 0.2
done

wait

################################################################################

### INICIA O WINE PELA PRIMEIRA VEZ

exec "${0}" "${@}"

################################################################################

# REFULGO
# export FONTCONFIG_PATH="/etc/fonts:${FONTCONFIG_PATH:+:$FONTCONFIG_PATH}"
# export XDG_DATA_DIRS="/usr/share/:${XDG_DATA_DIRS:+:$XDG_DATA_DIRS}"
# export GSETTINGS_SCHEMA_DIR="/wine-staging/share/glib-2.0/schemas:${GSETTINGS_SCHEMA_DIR:+:$GSETTINGS_SCHEMA_DIR}"
# export GSETTINGS_SCHEMA_DIR="/usr/share/glib-2.0/schemas:${GSETTINGS_SCHEMA_DIR:+:$GSETTINGS_SCHEMA_DIR}"
# export WINEDLLOVERRIDES='mscoree;mshtml='
# http://dl.winehq.org/wine
# https://wiki.winehq.org/Wine_User%27s_Guide

################################################################################
